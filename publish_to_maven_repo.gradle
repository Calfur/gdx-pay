afterEvaluate { project ->
    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                if (isLocalBuild()) {
                    repository(url: getLocalRepositoryUrl())
                } else if (isReleaseBuild()) {
                    repository(url: getReleaseRepositoryUrl()) {
                        authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
                    }
                } else {
                    snapshotRepository(url: getSnapshotRepositoryUrl()) {
                        authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
                    }
                }

                pom.project {
                    name POM_NAME
                    if (project.hasProperty('POM_PACKAGING')) {
                        packaging POM_PACKAGING
                    }
                    description POM_DESCRIPTION
                    url POM_URL

                    scm {
                        url POM_SCM_URL
                        connection POM_SCM_CONNECTION
                        developerConnection POM_SCM_DEV_CONNECTION
                    }

                    licenses {
                        license {
                            name POM_LICENCE_NAME
                            url POM_LICENCE_URL
                            distribution POM_LICENCE_DIST
                        }
                    }

                    developers {
                        rootProject.developers.each { dev ->
                            developer {
                                id dev.id
                                name dev.name
                                url dev.url
                            }
                        }
                    }
                }
            }
        }
    }

    signing {
        if (isReleaseBuild()) {
            useGpgCmd()
        }
        required { isReleaseBuild() }
        sign configurations.archives
    }
}
